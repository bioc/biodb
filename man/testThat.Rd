% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_framework.R
\name{testThat}
\alias{testThat}
\title{Run a test.}
\usage{
testThat(msg, fct, biodb = NULL, obs = NULL, conn = NULL)
}
\arguments{
\item{msg}{The test message.}

\item{fct}{The function to test.}

\item{biodb}{A valid Biodb instance to be passed to the test function.}

\item{obs}{An instance of BiodbTestMsgRec observer to be passed to test function.}

\item{conn}{A connector instance to be passed to the test function.}
}
\value{
No value returned.
}
\description{
Run a test function, using testthat framework.
In addition to calling `testthat::test_that()`, the function will call
`biodb::Biodb::info()` to signal the test function call to observers.
This will allow to print the call to the test function also into the test log
file, if logger is used for tests.
}
\examples{
# Instantiate a Biodb instance for testing
biodb <- biodb::createBiodbTestInstance(log="mylogfile.log")

# Define a context before running tests:
setTestContext(biodb, "Test my database connector.")

# Define a test function
my_test_function <- function(biodb) {
  # Do my tests...
}

# Run test
biodb::testThat("My test works", my_test_function, biodb=biodb)

# Terminate the instance
biodb$terminate()
}
