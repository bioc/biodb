#!/bin/bash

# Constants {{{1
################################################################

PROG_NAME=$(basename $0)
PROG_DIR=$(dirname $0)
OUTPUT=test-pkg.output
TRUE='true'
FALSE='false'

# Global variables {{{1
################################################################

DEBUG=0
ONLINE=$TRUE

# Print help {{{1
################################################################

function print_help {
	echo "Usage: $PROG_NAME [options]"
	echo
	echo "   -o, --online $TRUE/$FALSE  Enable or disable online tests. Default is '$TRUE'."
}

# Msg {{{1
################################################################

function msg {

	local tag=$1
	shift
	local code_level=1
	is_numeric=$(echo $1 | grep '^[0-9]*$')
	if [ -n "$is_numeric" ] ; then
		code_level=$1
		shift
	fi
	local msg=$1

	# Check tag
	if [ -z "$tag" -o \( "$tag" != INFO -a "$tag" != DEBUG -a "$tag" != ERROR \) ] ; then
		echo "ERROR: Unvalid message tag \"$tag\"." >&2
		exit 999
	fi

	# Print message
	[ "$tag" = DEBUG -a "$DEBUG" -lt "$code_level" ] || echo "$tag: $msg" >&2

	# Exit
	[ $tag = ERROR ] && exit $code_level

	return 0
}

# Get opt val {{{1
################################################################

function get_opt_val {
	[ -n "$2" ] || msg ERROR "\"$1\" requires a non-empty option argument."
	echo $2
}

# Read args {{{1
################################################################

function read_args {

	local args="$*" # save arguments for debugging purpose
	
	# Read options
	while true ; do
		shift_count=1
		case $1 in
			-o|--online)            ONLINE=$(get_opt_val $1 $2) ; shift_count=2 ;;
			-g|--debug)             DEBUG=$((DEBUG + 1)) ;;
			-h|--help)              print_help ; exit 0 ;;
			-|--|--*)               msg ERROR "Illegal option $1." ;;
			-?)                     msg ERROR "Unknown option $1." ;;
			-[^-]*) split_opt=$(echo $1 | sed 's/^-//' | sed 's/\([a-zA-Z]\)/ -\1/g') ; set -- $1$split_opt "${@:2}" ;;
			*) break
		esac
		shift $shift_count
	done
	shift $((OPTIND - 1))

	# Check arguments
	[ "$ONLINE" = $TRUE -o "$ONLINE" = $FALSE ] || msg ERROR "Command line argument --online must be set to either \"$TRUE\" or \"$FALSE\"."

	# Read remaining arguments
	[ $# -eq 0 ] || msg ERROR "No remaining argument is allowed."

	# Debug
	msg DEBUG 1 "Arguments are : $args"
}


# MAIN {{{1
################################################################

# Read arguments
read_args "$@"

# Run test
Rscript $PROG_DIR/test-pkg.R --online $ONLINE 2>&1 | tee $OUTPUT

# Look for error message
error=$(grep Error $OUTPUT)
[ -z "$error" ] || exit 1
